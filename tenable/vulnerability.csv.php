<?php
# Script: vulnerability.csv.php
# Owner: Carl Schelin
# Coding Standard 3.0 Applied
# Description: Retrieve data and update the database with the new info. Prepare and display the table

  header('Content-Type: text/javascript');

  include('settings.php');
  $called = 'yes';
  include($Loginpath . '/check.php');
  include($Sitepath . '/function.php');

  if (isset($_SESSION['username'])) {
    $package = "vulnerability.csv.php";
    $formVars['update']    = clean($_GET['update'],   10);
    $formVars['product']   = clean($_GET['product'],  10);
    $formVars['inwork']    = clean($_GET['inwork'],   10);
    $formVars['country']   = clean($_GET['country'],  10);
    $formVars['state']     = clean($_GET['state'],    10);
    $formVars['city']      = clean($_GET['city'],     10);
    $formVars['location']  = clean($_GET['location'], 10);
    $formVars['type']      = clean($_GET['type'],     10);
    $formVars['sort']      = clean($_GET["sort"],     20);
    $formVars['group']     = clean($_GET['group'],    10);

    if ($formVars['update'] == '') {
      $formVars['update'] = -1;
    }
    if ($formVars['sort'] == 'undefined') {
      $formVars['sort'] = '';
    }

    if (check_userlevel($db, $AL_Edit)) {

      logaccess($db, $_SESSION['uid'], $package, "Creating the data for viewing.");

      if ($formVars['sort'] != '') {
        $orderby = "order by " . $formVars['sort'] . $_SESSION['sort'];
        if ($_SESSION['sort'] == ' desc') {
          $_SESSION['sort'] = '';
        } else {
          $_SESSION['sort'] = ' desc';
        }
      } else {
        $_SESSION['sort'] = '';
      }

      $and = " where";
      if ($formVars['product'] == 0) {
        $product = '';
      } else {
        if ($formVars['product'] == -1) {
          $product = $and . " inv_product = 0 ";
          $and = " and";
        } else {
          $product = $and . " inv_product = " . $formVars['product'] . " ";
          $and = " and";
        }
      }

      $group = '';
      if ($formVars['group'] > 0) {
        $group = $and . " (vuln_group = " . $formVars['group'] . " or inv_manager = " . $formVars['group'] . " or vul_group = " . $formVars['group'] . ") ";
        $and = " and";
      }

      if ($formVars['inwork'] == 'false') {
        $inwork = $and . ' hw_primary = 1 and hw_deleted = 0 ';
        $and = " and";
      } else {
        $inwork = $and . " hw_active = '0000-00-00' and hw_primary = 1 and hw_deleted = 0 ";
        $and = " and";
      }

# Location management. With Country, State, City, and Data Center selectable, this needs to
# expand to permit the viewing of systems in larger areas
# two ways here.
# country > 0, state > 0, city > 0, location > 0
# or country == 0 and location >  0

      $location = '';
      if ($formVars['country'] == 0 && $formVars['location'] > 0) {
        $location = $and . " inv_location = " . $formVars['location'] . " ";
        $and = " and";
      } else {
        if ($formVars['country'] > 0) {
          $location .= $and . " loc_country = " . $formVars['country'] . " ";
          $and = " and";
        }
        if ($formVars['state'] > 0) {
          $location .= $and . " loc_state = " . $formVars['state'] . " ";
          $and = " and";
        }
        if ($formVars['city'] > 0) {
          $location .= $and . " loc_city = " . $formVars['city'] . " ";
          $and = " and";
        }
        if ($formVars['location'] > 0) {
          $location .= $and . " inv_location = " . $formVars['location'] . " ";
          $and = " and";
        }
      }

      if ($formVars['type'] == -1) {
        $type = "";
      } else {
        $type = $and . " inv_status = 0 ";
        $and = " and";
      }

      $where = $product . $group . $inwork . $location . $type;
#      $where = $group;
#      $where = '';

      $criticaldate = date('n/j/Y g:i:s A', strtotime("+60 days"));
      $highdate = date('n/j/Y g:i:s A', strtotime("+90 days"));

      $count = 0;
      $instruct = '';
      $product = '';
      $group = '';
      $q_string  = "select vuln_id,vuln_interface,vuln_securityid,vuln_duplicate,prod_name,inv_name,int_server,";
      $q_string .= "int_addr,sec_name,sev_name,grp_name ";
      $q_string .= "from vulnerabilities ";
      $q_string .= "left join interface on interface.int_id           = vulnerabilities.vuln_interface ";
      $q_string .= "left join inventory on inventory.inv_id           = interface.int_companyid ";
      $q_string .= "left join locations on locations.loc_id           = inventory.inv_location ";
      $q_string .= "left join products  on products.prod_id           = inventory.inv_product ";
      $q_string .= "left join inv_security  on inv_security.sec_id            = vulnerabilities.vuln_securityid ";
      $q_string .= "left join severity  on severity.sev_id            = inv_security.sec_severity ";
      $q_string .= "left join hardware  on hardware.hw_companyid      = inventory.inv_id ";
      $q_string .= "left join inv_vulnowner on inv_vulnowner.vul_interface    = vulnerabilities.vuln_interface and inv_vulnowner.vul_security = vulnerabilities.vuln_securityid ";
      $q_string .= "left join inv_groups  on inv_vulnowner.vul_group        = inv_groups.grp_id ";
      $q_string .= $where . " and vul_ticket = '' ";
#      $q_string .= $orderby;
      $q_string .= "order by sev_name,grp_name,prod_name,int_server,int_addr";
      $q_vulnerabilities = mysqli_query($db, $q_string) or die(header("Location: " . $Siteroot . "/error.php?script=" . $package . "&error=" . $q_string . "&mysql=" . mysqli_error($db)));
      if (mysqli_num_rows($q_vulnerabilities) > 0) {
        while ($a_vulnerabilities = mysqli_fetch_array($q_vulnerabilities)) {

# get vulowner and ticket from interface id and security id in vulowner table
          $q_string  = "select vul_id,grp_name,vul_ticket,vul_exception,vul_description ";
          $q_string .= "from inv_vulnowner "; 
          $q_string .= "left join groups on groups.grp_id = inv_vulnowner.vul_group ";
          $q_string .= "where vul_security = " . $a_vulnerabilities['vuln_securityid'] . " and vul_interface = " . $a_vulnerabilities['vuln_interface'] . " ";
          $q_inv_vulnowner = mysqli_query($db, $q_string) or die(header("Location: " . $Siteroot . "/error.php?script=" . $package . "&error=" . $q_string . "&mysql=" . mysqli_error($db)));
          $a_inv_vulnowner = mysqli_fetch_array($q_inv_vulnowner);

# if the product changes, change the product information
          if ($product != $a_vulnerabilities['inv_name']) {
            $output   .= $instruct;
            $output   .= "<hr>";
            if ($a_vulnerabilities['sev_name'] == 'Critical') {
              $output   .= "<p>Mitigate Vulnerabilities on " . $a_vulnerabilities['inv_name'] . " by " . $criticaldate . "<br>\n";
            }
            if ($a_vulnerabilities['sev_name'] == 'High') {
              $output   .= "<p>Mitigate Vulnerabilities on " . $a_vulnerabilities['inv_name'] . " by " . $highdate . "<br>\n";
            }
            $output   .= "The following vulnerabilities have been identified for the listed IP addresses.</p>\n";
            $output   .= "<p><pre>";
            $product = $a_vulnerabilities['inv_name'];
            $count++;
          }

          $output   .= $a_vulnerabilities['vuln_securityid'] . " ";
          $output   .= sprintf("%20s", $a_vulnerabilities['prod_name']) . " ";
          $output   .= sprintf("%15s", $a_vulnerabilities['inv_name']) . " ";
          $output   .= sprintf("%15s", $a_vulnerabilities['int_server']) . " ";
          $output   .= sprintf("%15s", $a_vulnerabilities['int_addr']) . " ";
          $output   .= $a_vulnerabilities['sec_name'] . " ";
          $output   .= $a_inv_vulnowner['grp_name'] . " ";
          $output   .= $a_vulnerabilities['sev_name'] . "\n";

          $instruct = "</pre></p><p>Instructions:<br>https://lnmt1cuomwiki1.internal.pri/wiki/index.php?title=Vulnerability_Mitigation_Process</p>\n";
        }
      }

      $output   .= $instruct;
      $output   .= "<hr>";

      $output   .= "<p>Total Servers to be Ticketed: " . $count . "</p>\n";

      mysqli_free_result($q_vulnerabilities);

      print "document.getElementById('table_mysql').innerHTML = '" . mysqli_real_escape_string($db, $output) . "';\n\n";

      print "document.vulnerability.update.disabled = true;\n";

      print "document.vulnerability.vul_group.focus();\n";

    } else {
      logaccess($db, $_SESSION['uid'], $package, "Unauthorized access.");
    }
  }
?>
