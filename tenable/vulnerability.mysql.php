<?php
# Script: vulnerability.mysql.php
# Owner: Carl Schelin
# Coding Standard 3.0 Applied
# Description: Retrieve data and update the database with the new info. Prepare and display the table

  header('Content-Type: text/javascript');

  include('settings.php');
  $called = 'yes';
  include($Loginpath . '/check.php');
  include($Sitepath . '/function.php');

  if (isset($_SESSION['username'])) {
    $package = "vulnerability.mysql.php";
    $formVars['update']    = clean($_GET['update'],   10);
    $formVars['product']   = clean($_GET['product'],  10);
    $formVars['inwork']    = clean($_GET['inwork'],   10);
    $formVars['country']   = clean($_GET['country'],  10);
    $formVars['state']     = clean($_GET['state'],    10);
    $formVars['city']      = clean($_GET['city'],     10);
    $formVars['location']  = clean($_GET['location'], 10);
    $formVars['type']      = clean($_GET['type'],     10);
    $formVars['sort']      = clean($_GET["sort"],     20);
    $formVars['group']     = clean($_GET['group'],    10);

    if ($formVars['update'] == '') {
      $formVars['update'] = -1;
    }
    if ($formVars['sort'] == 'undefined') {
      $formVars['sort'] = '';
    }

    if (check_userlevel($db, $AL_Edit)) {
      if ($formVars['update'] == 0 || $formVars['update'] == 1) {
        $formVars['id']               = clean($_GET['id'],                10);
        $formVars['int_id']           = clean($_GET['int_id'],            10);
        $formVars['sec_id']           = clean($_GET['sec_id'],            10);
        $formVars['vul_group']        = clean($_GET['vul_group'],         10);
        $formVars['vul_ticket']       = clean($_GET['vul_ticket'],        20);
        $formVars['vul_exception']    = clean($_GET['vul_exception'],     10);
        $formVars['vul_description']  = clean($_GET['vul_description'],  100);

        if ($formVars['id'] == '') {
          $formVars['id'] = 0;
        }
        if ($formVars['vul_exception'] == 'true') {
          $formVars['vul_exception'] = 1;
        } else {
          $formVars['vul_exception'] = 0;
        }

# get the int_id and sec_id. if it exists in inv_vulnowner, don't add a new one.
        $vulnexists = 0;
        $q_string = "select vul_id ";
        $q_string .= "from inv_vulnowner ";
        $q_string .= "where vul_interface = " . $formVars['int_id'] . " and vul_security = " . $formVars['sec_id'] . " ";
        $q_inv_vulnowner = mysqli_query($db, $q_string) or die(header("Location: " . $Siteroot . "/error.php?script=" . $package . "&error=" . $q_string . "&mysql=" . mysqli_error($db)));
        if (mysqli_num_rows($q_inv_vulnowner) > 0) {
          $vulnexists = 1;
        }

# check to make sure an interface is there
# and if found and we're doing an add, fail out. Don't want more than one vulnowner
#        if (strlen($formVars['int_id']) > 0 && ($vulnexists == 0 && $formVars['update'] == 0)) {
        if (strlen($formVars['int_id']) > 0) {
          logaccess($db, $_SESSION['uid'], $package, "Building the query.");

          $q_string =
            "vul_interface   =   " . $formVars['int_id']           . "," .
            "vul_security    =   " . $formVars['sec_id']           . "," . 
            "vul_group       =   " . $formVars['vul_group']        . "," . 
            "vul_ticket      = \"" . $formVars['vul_ticket']       . "\"," . 
            "vul_exception   =   " . $formVars['vul_exception']    . "," . 
            "vul_description = \"" . $formVars['vul_description']  . "\"";

          if ($formVars['update'] == 0) {
            $q_string = "insert into inv_vulnowner set vul_id = NULL, " . $q_string;
          }
          if ($formVars['update'] == 1) {
            $q_vulstr  = "select vul_id ";
            $q_vulstr .= "from inv_vulnowner ";
            $q_vulstr .= "where vul_interface = " . $formVars['int_id'] . " and vul_security = " . $formVars['sec_id'] . " ";
            $q_inv_vulnowner = mysqli_query($db, $q_vulstr) or die(header("Location: " . $Siteroot . "/error.php?script=" . $package . "&error=" . $q_vulstr . "&mysql=" . mysqli_error($db)));
            $a_inv_vulnowner = mysqli_fetch_array($q_inv_vulnowner);
            $formVars['id'] = $a_inv_vulnowner['vul_id'];

            $q_string = "update inv_vulnowner set " . $q_string . " where vul_id = " . $formVars['id'];
          }

          logaccess($db, $_SESSION['uid'], $package, "Saving Changes to: " . $formVars['id']);

          $result = mysqli_query($db, $q_string) or die(header("Location: " . $Siteroot . "/error.php?script=" . $package . "&error=" . $q_string . "&mysql=" . mysqli_error($db)));

        } else {
          if ($vulnexists == 1) {
            print "alert('Owner Exists');\n";
          } else {
            print "alert('You must input data before saving changes.');\n";
          }
        }
      }


# we only want to reload the data when we want as it takes a while.
      if ($formVars['update'] == -2) {
        logaccess($db, $_SESSION['uid'], $package, "Creating the table for viewing.");

        $help  = "<table class=\"ui-styled-table\">\n";
        $help .= "<tr>\n";
        $help .= "  <th class=\"ui-state-default\">Vulnerability Listing</th>\n";
        $help .= "  <th class=\"ui-state-default\" width=\"20\"><a href=\"javascript:;\" onmousedown=\"toggleDiv('vulnerability-listing-help');\">Help</a></th>\n";
        $help .= "</tr>\n";
        $help .= "</table>\n";
        $help .= "<div id=\"vulnerability-listing-help\" style=\"display: none\">\n";

        $help .= "<div class=\"main-help ui-widget-content\">\n";
        $help .= "<ul>\n";
        $help .= "  <li><strong>Vulnerability Listing</strong>\n";
        $help .= "  <ul>\n";
        $help .= "    <li><strong>Highlighted</strong> - This vulnerability is a <span class=\"ui-state-error\">Critical</span> vulnerability.</li>\n";
        $help .= "    <li><strong>Highlighted</strong> - This vulnerability is a <span class=\"ui-state-highlight\">High</span> vulnerability.</li>\n";
        $help .= "    <li><strong>Right Less-Than (&lt;)</strong> - This identifies a vulnerability as a duplicate for the system. The entry is also reduced to the default color vs being highlighed as above. The scanner scans each IP and some servers have more than one IP so the scanner identifies multiple copies for the same system.</li>\n";
        $help .= "    <li><strong>Editing</strong> - Click on a vulnerability to edit it.</li>\n";
        $help .= "  </ul></li>\n";
        $help .= "</ul>\n";

        $help .= "<ul>\n";
        $help .= "  <li><strong>Notes</strong>\n";
        $help .= "  <ul>\n";
        $help .= "    <li>Click the <strong>Vulnerability Management</strong> title bar to toggle the <strong>Vulnerability Form</strong>.</li>\n";
        $help .= "  </ul></li>\n";
        $help .= "</ul>\n";

        $help .= "</div>\n";

        $help .= "</div>\n";


        $header  = "<table class=\"ui-styled-table\">\n";
        $header .= "<tr>\n";
        $header .= "  <th class=\"ui-state-default\">Id</th>\n";
        $header .= "  <th class=\"ui-state-default\">Server</th>\n";
        $header .= "  <th class=\"ui-state-default\">Interface</th>\n";
        $header .= "  <th class=\"ui-state-default\">IP Addr</th>\n";
        $header .= "  <th class=\"ui-state-default\">Vulnerability</th>\n";
        $header .= "  <th class=\"ui-state-default\">Custodian</th>\n";
        $header .= "  <th class=\"ui-state-default\">Responsible</th>\n";
        $header .= "  <th class=\"ui-state-default\">Ticket</th>\n";
        $header .= "  <th class=\"ui-state-default\">Detail</th>\n";
        $header .= "  <th class=\"ui-state-default\">Done</th>\n";
        $header .= "</tr>\n";

        if ($formVars['sort'] != '') {
          $orderby = "order by " . $formVars['sort'] . $_SESSION['sort'];
          if ($_SESSION['sort'] == ' desc') {
            $_SESSION['sort'] = '';
          } else {
            $_SESSION['sort'] = ' desc';
          }
        } else {
          $orderby = "order by prod_name,inv_name,int_addr,vuln_duplicate ";
          $_SESSION['sort'] = '';
        }

        $and = " where";
        if ($formVars['product'] == 0) {
          $product = '';
        } else {
          if ($formVars['product'] == -1) {
            $product = $and . " inv_product = 0 ";
            $and = " and";
          } else {
            $product = $and . " inv_product = " . $formVars['product'] . " ";
            $and = " and";
          }
        }

        $group = '';
        if ($formVars['group'] > 0) {
          $group = $and . " (vuln_group = " . $formVars['group'] . " or inv_manager = " . $formVars['group'] . " or vul_group = " . $formVars['group'] . ") ";
          $and = " and";
        }

# Location management. With Country, State, City, and Data Center selectable, this needs to
# expand to permit the viewing of systems in larger areas
# two ways here.
# country > 0, state > 0, city > 0, location > 0
# or country == 0 and location >  0

        $location = '';
        if ($formVars['country'] == 0 && $formVars['location'] > 0) {
          $location = $and . " inv_location = " . $formVars['location'] . " ";
          $and = " and";
          $q_location  = "left join inv_locations on inv_locations.loc_id           = inventory.inv_location ";
        } else {
          if ($formVars['country'] > 0) {
            $location .= $and . " cn_id = " . $formVars['country'] . " ";
            $and = " and";
            $q_location  = "left join inv_locations on inv_locations.loc_id           = inventory.inv_location ";
            $q_location .= "left join inv_cities    on inv_cities.ct_id               = inv_locations.loc_city ";
            $q_location .= "left join inv_states    on inv_states.st_id               = inv_cities.ct_state ";
            $q_location .= "left join country   on country.cn_id              = inv_states.st_country ";
          }
          if ($formVars['state'] > 0) {
            $location .= $and . " st_id = " . $formVars['state'] . " ";
            $and = " and";
            $q_location  = "left join inv_locations on inv_locations.loc_id           = inventory.inv_location ";
            $q_location .= "left join inv_cities    on inv_cities.ct_id               = inv_locations.loc_city ";
            $q_location .= "left join inv_states    on inv_states.st_id               = inv_cities.ct_state ";
            $q_location .= "left join country   on country.cn_id              = inv_states.st_country ";
          }
          if ($formVars['city'] > 0) {
            $location .= $and . " ct_id = " . $formVars['city'] . " ";
            $and = " and";
            $q_location  = "left join inv_locations on inv_locations.loc_id           = inventory.inv_location ";
            $q_location .= "left join inv_cities    on inv_cities.ct_id               = inv_locations.loc_city ";
            $q_location .= "left join inv_states    on inv_states.st_id               = inv_cities.ct_state ";
            $q_location .= "left join country   on country.cn_id              = inv_states.st_country ";
          }
          if ($formVars['location'] > 0) {
            $location .= $and . " inv_location = " . $formVars['location'] . " ";
            $and = " and";
            $q_location  = "left join inv_locations on inv_locations.loc_id           = inventory.inv_location ";
            $q_location .= "left join inv_cities    on inv_cities.ct_id               = inv_locations.loc_city ";
            $q_location .= "left join inv_states    on inv_states.st_id               = inv_cities.ct_state ";
            $q_location .= "left join country   on country.cn_id              = inv_states.st_country ";
          }
        }

        if ($formVars['type'] == -1) {
          $type = "";
        } else {
          $type = $and . " inv_status = 0 ";
          $and = " and";
        }

        $where = $product . $group . $inwork . $location . $type;
#        $where = $group;
#        $where = '';

# let's preload some finite tables.
        $q_string  = "select sec_id,sec_name,sev_id,sev_name ";
        $q_string .= "from inv_security ";
        $q_string .= "left join inv_severity on inv_severity.sev_id = inv_security.sec_severity ";
        $q_string .= "limit 1000 ";
        $q_inv_security = mysqli_query($db, $q_string) or die(header("Location: " . $Siteroot . "/error.php?script=" . $package . "&error=" . $q_string . "&mysql=" . mysqli_error($db)));
        while ($a_inv_security = mysqli_fetch_array($q_inv_security)) {
          $secname[$a_inv_security['sec_id']] = $a_inv_security['sec_name'];
          $sevname[$a_inv_security['sec_id']] = $a_inv_security['sec_severity'];
          $sevid[$a_inv_security['sec_id']] = $a_inv_security['sev_id'];
        }

        $q_string  = "select grp_id,grp_name ";
        $q_string .= "from inv_groups ";
        $q_inv_groups = mysqli_query($db, $q_string) or die(header("Location: " . $Siteroot . "/error.php?script=" . $package . "&error=" . $q_string . "&mysql=" . mysqli_error($db)));
        while ($a_inv_groups = mysqli_fetch_array($q_inv_groups)) {
          $grpname[$a_inv_groups['grp_id']] = $a_inv_groups['grp_name'];
        }

        $q_string  = "select prod_id,prod_name ";
        $q_string .= "from products ";
        $q_products = mysqli_query($db, $q_string) or die(header("Location: " . $Siteroot . "/error.php?script=" . $package . "&error=" . $q_string . "&mysql=" . mysqli_error($db)));
        while ($a_products = mysqli_fetch_array($q_products)) {
          $prodname[$a_products['prod_id']] = $a_products['prod_name'];
        }


        include($Securitypath . '/vulnerability.unassigned.php');

#        include($Securitypath . '/vulnerability.assigned.php');

#        include($Securitypath . '/vulnerability.ticketed.php');

      }

# ticket layout
      if ($formVars['update'] == -3) {
        include($Securitypath . '/vulnerability.notticketed.php');
      } else {
        logaccess($db, $_SESSION['uid'], $package, "Unauthorized access.");
      }
    }
  }
?>
